plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

Properties appUrlsProperties = new Properties()
def propFile = rootProject.file('appurls.properties')
appUrlsProperties.load(new FileInputStream(propFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.sukhralia.gamerift"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding{
        enabled = true
    }

    flavorDimensions "1.0.0"
    productFlavors{
        qa{
            buildConfigField "String", "APP_BASE_URL", appUrlsProperties['APP_BASE_URL']
        }
    }

    androidExtensions {
        experimental = true
    }
}


dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationComponentVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationComponentVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleExtensionVersion"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit: $retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutinesAdapterVersion"

    //Moshi
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifeCycleVersion"

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"

    // Architectural Components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleVersion"

    //MultiDex
    implementation 'com.android.support:multidex:1.0.3'

    //Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"

    //Room
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor  "android.arch.persistence.room:compiler:$roomVersion"
}

kapt {
    mapDiagnosticLocations = true
}